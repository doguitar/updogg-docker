name: build

on:
  schedule:
    - cron: '0 14 * * *' # Run at 6:00 AM PST
    
  push:
    branches:
      - '**'  # Match all branches
  
  pull_request:
    branches:
      - '**'  # Match all branches

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get the latest HEAD commit date
        id: head_commit
        run: |
          # Get the latest commit date
          HEAD_COMMIT_DATE=$(git log -1 --format=%ct)
          echo "HEAD_COMMIT_DATE=$HEAD_COMMIT_DATE" >> $GITHUB_ENV

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the last image date (from branch-latest tag)
        id: image_date
        run: |
          # Get the creation date of the branch-latest image
          IMAGE_DATE=$(docker manifest inspect ghcr.io/${{ github.repository }}:${{ github.ref_name }}-latest --format '{{ .Created }}' || echo "not found")
          if [[ "$IMAGE_DATE" == "not found" ]]; then
            echo "IMAGE_DATE=0" >> $GITHUB_ENV
          else
            # Convert the image date to a Unix timestamp
            IMAGE_TIMESTAMP=$(date -d "$IMAGE_DATE" +%s)
            echo "IMAGE_DATE=$IMAGE_TIMESTAMP" >> $GITHUB_ENV
          fi

      - name: Compare commit date with image date
        id: check_changes
        run: |
          if [[ $HEAD_COMMIT_DATE -gt $IMAGE_DATE ]]; then
            echo "New changes detected. Proceeding with the build."
          else
            echo "No new changes since the last build. Skipping the build."
            exit 0
          fi

      - name: Set the date tag
        run: echo "DATE_TAG=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Get the sanitized branch or PR name
        run: |
          # Extract the reference and replace any invalid characters for Docker tags
          if [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            # For branch builds
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
          elif [[ "${GITHUB_REF}" == refs/pull/*/merge ]]; then
            # For pull request builds
            BRANCH_NAME=pull-request-${GITHUB_REF#refs/pull/}
            BRANCH_NAME=${BRANCH_NAME//\//-} # Replace slashes with hyphens
          else
            BRANCH_NAME=unknown
          fi
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
           ${{ github.repository }}
           
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ env.BRANCH_NAME }}-${{ env.DATE_TAG }} , ghcr.io/${{ github.repository }}:${{ env.BRANCH_NAME }}-latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
